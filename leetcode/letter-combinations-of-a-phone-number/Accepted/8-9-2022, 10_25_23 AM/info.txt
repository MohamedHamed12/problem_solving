{"id":769159808,"lang":"python3","lang_name":"Python3","time":"2 months, 4 weeks","timestamp":1660033523,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/769159808/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"14 MB","code":"class Solution:\n    def letterCombinations(self, dig: str) -> List[str]:\n        if not dig:return\n        d = {\n            '2': ['a', 'b', 'c'],\n            '3': ['d', 'e', 'f'],\n            '4': ['g', 'h', 'i'],\n            '5': ['j', 'k', 'l'],\n            '6': ['m', 'n', 'o'],\n            '7': ['p', 'q', 'r', 's'],\n            '8': ['t', 'u', 'v'],\n            '9': ['w', 'x', 'y', 'z']\n        }\n        l=[]\n        def dfs(ind,tem):\n            if ind ==len(dig):\n                l.append(\"\".join(tem) )\n                return\n            for i in d[dig[ind]]:\n                dfs(ind+1,tem+[i])\n        dfs(0,[])\n        return l","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"notes":"","topic_tags":[]}