{"id":726070260,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1655656128,"status":10,"status_display":"Accepted","runtime":"77 ms","url":"/submissions/detail/726070260/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"18.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isBalanced(self, root: Optional[TreeNode]) -> bool:\n        ch=True\n        def path(root):\n             \n               if not root :\n                  return 0\n               nonlocal ch\n               l=0;r=0\n               if root.left:\n                  l=path(root.left)\n               if root.right:\n                  r=path(root.right)\n               if abs(l-r)>1:\n                    ch=False\n               return 1+max(l,r)\n        path(root)\n        \n        return ch\n        \n                \n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"notes":"","topic_tags":[]}