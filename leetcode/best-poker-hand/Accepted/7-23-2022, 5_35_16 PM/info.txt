{"id":754619687,"lang":"python3","lang_name":"Python3","time":"3 months, 2 weeks","timestamp":1658590516,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/754619687/","is_pending":"Not Pending","title":"Best Poker Hand","memory":"13.9 MB","code":"class Solution:\n    def bestHand(self, ranks: List[int], suits: List[str]) -> str:\n        if len(set(suits))==1:return \"Flush\"\n        totr=[]\n        for i in set(ranks):\n           totr.append( ranks.count(i))\n        if max(totr)>=3:return \"Three of a Kind\"\n        elif max(totr)>=2:return \"Pair\"\n        else:return \"High Card\"\n        \n            \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-poker-hand","has_notes":false,"notes":"","topic_tags":[]}