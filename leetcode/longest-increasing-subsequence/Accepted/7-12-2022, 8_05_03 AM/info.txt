{"id":744919511,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1657605903,"status":10,"status_display":"Accepted","runtime":"7723 ms","url":"/submissions/detail/744919511/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"14.2 MB","code":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        mx=0\n       \n        n=len(nums)\n        if n==1:return 1\n        l=[1]*n\n        for i in range(1,n):\n            for j in range(0,i):\n                 if nums[i]>nums[j]:\n                    l[i]=max(l[i],l[j]+1)\n            mx=max(mx,l[i])\n            \n        return mx","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"notes":"","topic_tags":[]}