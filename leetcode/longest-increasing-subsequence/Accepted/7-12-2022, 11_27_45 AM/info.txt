{"id":745051543,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1657618065,"status":10,"status_display":"Accepted","runtime":"101 ms","url":"/submissions/detail/745051543/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"14.3 MB","code":"class Solution(object):\n    def lengthOfLIS(self, nums):\n        sub = [nums[0]]\n        nums = nums[1:]\n        for n in nums:\n          if sub[-1]<n:\n            sub.append(n); continue\n          sub[bisect.bisect_left(sub,n)] = n\n        return len(sub)","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"notes":"","topic_tags":[]}