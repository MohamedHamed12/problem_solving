{"id":745050442,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1657617950,"status":10,"status_display":"Accepted","runtime":"585 ms","url":"/submissions/detail/745050442/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.6 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        vector<int> dp(nums.size(), 1);\n        int ans = 1;\n        for(int i = 1; i < nums.size(); i++){\n            for(int j = 0; j < i; j++){\n                if(nums[j] < nums[i] && dp[i] < dp[j] + 1){\n                    dp[i] = dp[j] + 1;\n                }\n            }\n            ans = max(ans, dp[i]);\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"notes":"","topic_tags":[]}