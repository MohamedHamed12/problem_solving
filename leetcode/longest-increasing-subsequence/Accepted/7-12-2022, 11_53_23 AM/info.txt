{"id":745066468,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1657619603,"status":10,"status_display":"Accepted","runtime":"121 ms","url":"/submissions/detail/745066468/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"14.1 MB","code":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        n=len(nums)\n        tot=[nums[0]]\n        nums.pop(0)\n        for  i in range(n-1):\n            if nums[i]>tot[-1]:tot.append(nums[i])\n            else:tot[bisect.bisect_left(tot,nums[i])]=nums[i]\n        return len(tot)\n                \n        ","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"notes":"","topic_tags":[]}