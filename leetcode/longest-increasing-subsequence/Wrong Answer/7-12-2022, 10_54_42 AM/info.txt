{"id":745032564,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1657616082,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/745032564/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution:\n    def lengthOfLIS(self, a: List[int]) -> int:\n        n=len(a)\n        b=sorted(a)\n        m=len(b)\n        dp=[[-1]*(m+1)for i in range(n+1) ]\n        for i in range(n+1):\n            for j in range(m+1):\n                if i==0 or j==0:dp[i][j]=0\n                elif a[i-1]==b[j-1] :dp[i][j]=1+dp[i-1][j-1]\n                else:dp[i][j]=max(dp[i-1][j],dp[i][j-1])\n        return dp[-1][-1]","compare_result":"110101111101101111101111000000000000000000000000000000","title_slug":"longest-increasing-subsequence","has_notes":false,"notes":"","topic_tags":[]}