{"id":768174458,"lang":"python3","lang_name":"Python3","time":"2 months, 4 weeks","timestamp":1659939446,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/768174458/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        mx=0\n        n=len(nums)\n        for i in range(n):\n            cur=nums[i]\n            tem=1\n            for j in range(i-1,-1,-1):\n                \n                if  cur >nums[j]:\n                    tem+=1\n                    cur =nums[j]\n            mx=max(mx,tem)\n        return mx\n#         n=len(nums)\n#         tot=[nums[0]]\n#         nums.pop(0)\n#         for  i in range(n-1):\n#             if nums[i]>tot[-1]:tot.append(nums[i])\n#             else:tot[bisect.bisect_left(tot,nums[i])]=nums[i]\n#         return len(tot)\n                \n        ","compare_result":"101111111111111010010111111111101110000000000000000000","title_slug":"longest-increasing-subsequence","has_notes":false,"notes":"","topic_tags":[]}