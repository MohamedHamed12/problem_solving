{"id":764834486,"lang":"python3","lang_name":"Python3","time":"3Â months","timestamp":1659597181,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/764834486/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"N/A","code":"class Solution:\n    def longestPalindromeSubseq(self, s: str) -> int:\n        def max(x, y):\n            if(x > y):\n                return x\n            return y\n\n            # Returns the length of the longest\n            # palindromic subsequence in seq\n        def lps(seq, i, j):\n\n                # Base Case 1: If there is\n                # only 1 character\n                if (i == j):\n                    return 1\n\n                # Base Case 2: If there are only 2\n                # characters and both are same\n                if (seq[i] == seq[j] and i + 1 == j):\n                    return 2\n\n                # If the first and last characters match\n                if (seq[i] == seq[j]):\n                    return lps(seq, i + 1, j - 1) + 2\n\n                # If the first and last characters\n                # do not match\n                return max(lps(seq, i, j - 1),\n                           lps(seq, i + 1, j))\n\n            # Driver Code\n           \n        n = len(s)\n               \n        return lps(s, 0, n - 1)","compare_result":"11111111111111111111111111111111111111111111111111111111111110000000000000000000000000","title_slug":"longest-palindromic-subsequence","has_notes":false,"notes":"","topic_tags":[]}