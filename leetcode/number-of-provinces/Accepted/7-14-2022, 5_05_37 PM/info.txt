{"id":747011750,"lang":"python","lang_name":"Python","time":"3 months, 3 weeks","timestamp":1657811137,"status":10,"status_display":"Accepted","runtime":"457 ms","url":"/submissions/detail/747011750/","is_pending":"Not Pending","title":"Number of Provinces","memory":"13.8 MB","code":"class Solution(object):\n    def findCircleNum(self, l):\n         n=len(l)\n         chlist=[-1]*n\n         def find(x):\n                while chlist[x]!=-1:\n                         if x==chlist[x]:break\n                         x=chlist[x]\n                return x          \n         def union(x,y):\n                chlist[x]=y\n         def check(x,y):\n            m=find(x)\n            n=find(y)\n            if m!=n:union(x,y)\n     \n         def check(i,j):\n            x=find(i)\n            y=find(j)\n            if x!=y:union(x,y)\n\n         for i in range(n):\n             for j in range(n):\n                 if l[i][j]==1 and i!=j:\n                        check(i,j)\n                        \n         return chlist.count(-1)\n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"notes":"","topic_tags":[]}