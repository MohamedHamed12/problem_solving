{"id":734956274,"lang":"python3","lang_name":"Python3","time":"4 months, 1 week","timestamp":1656580474,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/734956274/","is_pending":"Not Pending","title":"Pacific Atlantic Water Flow","memory":"N/A","code":"class Solution:\n    def pacificAtlantic( self,heights):    \n        n=len(heights);m=len(heights[0])\n        visit=[[True]*n for i in range(n)]\n        def vald(i,j):\n            if i<n and i>=0 and  j<n and j>=0 and visit[i][j] :  return True  \n            return False\n        temi=0;temj=0\n        def give(i,j,i2,j2):\n             if i2==temi or j2==temj :return True\n             if heights[i2][j2]>=heights[i][j]:return True\n             return False\n        def dfs(i,j):\n            q=[[i,j]]\n            while q:\n                h,k=q.pop()\n                l=[[h+1,k],[h,k+1],[h-1,k],[h,k-1]]\n                for r in l:\n                     if vald(r[0],r[1]) and r not in q  :\n                         if give(h,k,r[0],r[1]): q.append(r)\n                       \n                visit[h][k]=False                              \n        for j in range(m):\n            dfs(0,j)\n        for i in range(n) :\n            dfs(i,0)\n        v=visit.copy()\n        visit=[[True]*n for i in range(n)]\n        temi=n-1;temj=m-1\n        for j in range(m):\n            dfs(n-1,j)\n        for i in range(n) :\n            dfs(i,m-1)\n        ret=[]\n        for i in range(n):\n            for j in range(m):\n                if (not v[i][j] )and (not visit[i][j]):ret.append([i,j])\n        return ret\n\n","compare_result":"11111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"pacific-atlantic-water-flow","has_notes":false,"notes":"","topic_tags":[]}