{"id":728584506,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1655914085,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/728584506/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isValidBST(self, root: Optional[TreeNode]) -> bool:\n    \n            m=n=True\n            if not root :\n                return True\n        \n            if root.left:\n                if root.left.val>=root.val:\n                    return False\n                    \n                m =self.isValidBST(root.left)\n             \n\n\n            if root.right:\n                if root.right.val<=root.val:\n                    return False\n                n=self.isValidBST(root.right)\n               \n            return  m and n","compare_result":"11111111111001001001111111111111111111111111111111111111111111111111111101111101","title_slug":"validate-binary-search-tree","has_notes":false,"notes":"","topic_tags":[]}