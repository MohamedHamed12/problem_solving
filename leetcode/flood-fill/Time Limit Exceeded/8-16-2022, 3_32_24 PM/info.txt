{"id":775171404,"lang":"python3","lang_name":"Python3","time":"2Â months, 3Â weeks","timestamp":1660656744,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/775171404/","is_pending":"Not Pending","title":"Flood Fill","memory":"N/A","code":"class Solution:\n    def floodFill(self, image: List[List[int]], sr: int, sc: int, color: int) -> List[List[int]]:\n        \n            old=image[sr][sc]\n            n=len(image)\n            m=len(image[0])\n            index=[(1,0),(0,1),(-1,0),(0,-1)]\n            visit=[[False]*m for i in range(n)]\n\n            def valid(i, j):\n                if i >= 0 and i < n and j >= 0 and j < m and image[i][j]==old: return True\n                return False\n\n            def bfs(i, j):\n                q = [(i, j)]\n                while q:\n                    rx,ry=q.pop()\n                    visit[rx][ry]=False\n                    for u ,v in index :\n                        h,k=u+rx,v+ry\n                        if valid(h,k) and not visit[h][k] and  (h,k) not in q:q.append((h,k))\n                    image[rx][ry]=color\n                return  image\n\n\n            return bfs(sr,sc)","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"flood-fill","has_notes":false,"notes":"","topic_tags":[]}