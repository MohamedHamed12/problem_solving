{"id":726151546,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1655663545,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/726151546/","is_pending":"Not Pending","title":"Same Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:\n        ch=True\n        def check(p,q):\n            if p or q:\n                nonlocal ch\n                if (not p ) or  (  not q):\n                    ch=False      \n                if p.val!=q.val:\n                    ch=False      \n                check(p.left,q.left)\n                check(p.right,q.right)\n        check(p,q)\n        return ch\n                    \n                #     return 0\n                # if p.left and q.left :\n                #   l=isSameTree(p.left,q.left)\n                # if p.right and q.right :\n                #   l=isSameTree(p.right,q.right)\n                \n\n\n        ","compare_result":"100000000000000000000000000000000000000000000000000000000000","title_slug":"same-tree","has_notes":false,"notes":"","topic_tags":[]}