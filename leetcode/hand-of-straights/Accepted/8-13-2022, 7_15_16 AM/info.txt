{"id":772363337,"lang":"python3","lang_name":"Python3","time":"2 months, 3 weeks","timestamp":1660367716,"status":10,"status_display":"Accepted","runtime":"299 ms","url":"/submissions/detail/772363337/","is_pending":"Not Pending","title":"Hand of Straights","memory":"15.7 MB","code":"class Solution:\n    def isNStraightHand(self, hand: List[int], k: int) -> bool:\n         c=Counter(hand)\n         l=collections.deque()\n         last=-1\n         open=0\n         for i in sorted(c):\n                if  c[i]<open or open>0 and i>last+1:return False\n              \n                l.append(c[i]-open)\n                open=c[i]\n                last=i\n                if len(l)==k:\n                    open-=l.popleft()\n         return open==0\n        # if len(hand)%groupSize:\n        #    return False\n        # hand.sort()\n        # while len(hand)>0:\n        #     cur = []\n        #     cur.append(hand.pop())\n        #     for i in range(len(hand)-1, -1, -1):\n        #         if len(cur) == groupSize:\n        #             break\n        #         if hand[i] == cur[len(cur)-1]-1:\n        #             cur.append(hand[i])\n        #             hand.pop(i)\n        #     if len(cur) != groupSize:\n        #         return False\n        # return True \n#         c=Counter(hand)\n#         s=sorted(set(hand))\n#         sm=len(hand)\n#         if sm%k!=0:return False\n        \n#         g=tmp=c[s[0]]\n#         for i in range(1,len(s)):\n#             if c[s[i]]-tmp<0:return False\n#             tmp=c[s[i]]-tmp\n#             g+=tmp\n#         if sm//k==g:return True\n#         else:return False","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"hand-of-straights","has_notes":false,"notes":"","topic_tags":[]}