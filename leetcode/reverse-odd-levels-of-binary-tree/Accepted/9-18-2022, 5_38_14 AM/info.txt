{"id":802559663,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1663472294,"status":10,"status_display":"Accepted","runtime":"4651 ms","url":"/submissions/detail/802559663/","is_pending":"Not Pending","title":"Reverse Odd Levels of Binary Tree","memory":"22.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def reverseOddLevels(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n            q=[root]\n            ind=0\n            l=[]\n            while q:\n                tmp=[]\n                t=[]\n                while q:\n                    i=q.pop(0)\n                    if i:\n                        tmp.append(i.val)\n                        t.append(i.left)\n                        t.append(i.right)\n                q=t.copy()\n                if ind%2==1:tmp=tmp[::-1]\n                l.append(tmp)\n                ind+=1\n            l=sum(l,[])\n            r=TreeNode(l.pop(0))\n            q=[r]\n            while l and q:\n                t=[]\n                while l and q:\n                    tmp=q.pop(0)\n                    if l:tmp.left=TreeNode(l.pop(0))\n                    if l:tmp.right=TreeNode(l.pop(0))\n                    t.append(tmp.left)\n                    t.append(tmp.right)\n                q=t.copy()\n            return r\n","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-odd-levels-of-binary-tree","has_notes":false,"notes":"","topic_tags":[]}