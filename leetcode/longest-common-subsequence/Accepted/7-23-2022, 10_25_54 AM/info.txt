{"id":754340528,"lang":"python3","lang_name":"Python3","time":"3 months, 2 weeks","timestamp":1658564754,"status":10,"status_display":"Accepted","runtime":"538 ms","url":"/submissions/detail/754340528/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"21.9 MB","code":"class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n            dp = [[0] * (len(text2) + 1) for i in range(len(text1) + 1)]\n        \n            for i in range(1, len(text1) + 1):\n                for j in range(1, len(text2) + 1):\n\n                    if text1[i-1] == text2[j-1]:\n                        dp[i][j] = dp[i-1][j-1] + 1\n                    else:\n                        dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n\n            return dp[-1][-1]","compare_result":"111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"notes":"","topic_tags":[]}