{"id":790671254,"lang":"python3","lang_name":"Python3","time":"2Â months","timestamp":1662229361,"status":10,"status_display":"Accepted","runtime":"796 ms","url":"/submissions/detail/790671254/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"14.7 MB","code":"class Solution:\n    def minWindow(self, s: str, t: str) -> str:        \n        n=len(s);n2=len(t)\n        # if s==t:return s\n        c=Counter(t)\n        c2=Counter(s[:n2])\n        ind=n2\n        l=0\n        tot=' '*n\n        def check():\n            for i in c:\n                if  c[i]>c2[i]:return False\n            return True\n        \n        while ind<n :\n            while ind<n:\n                if check():break\n                c2[s[ind]]+=1\n                ind+=1\n            if check() and len(s[l-1:ind])<len(tot):tot=s[l:ind]\n            while True:\n                if not check():break\n                elif len(s[l:ind])<len(tot):tot=s[l:ind]\n                c2[s[l]]-=1\n                l+=1\n        if check() and n==n2:return s\n        return tot if tot!=' '*n else ''\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"notes":"","topic_tags":[]}