{"id":770265533,"lang":"python3","lang_name":"Python3","time":"2 months, 3 weeks","timestamp":1660141922,"status":10,"status_display":"Accepted","runtime":"6220 ms","url":"/submissions/detail/770265533/","is_pending":"Not Pending","title":"Minimize the Difference Between Target and Chosen Elements","memory":"14.2 MB","code":"class Solution:\n    def minimizeTheDifference(self, l: List[List[int]], t: int) -> int:\n        s=sum\n#         mask = 1\n#         for row in mat:\n#             next_mask = 0\n#             for num in row:\n#                 next_mask |= (mask << num)\n#             mask = next_mask\n        \n#         for deviation in count():\n#             for num in (target - deviation, target + deviation):\n#                 if num >= 0 and mask & (1 << num):\n#                     return deviation\n\n\n#         reachable_sum = 1\n\n#         for row in mat:\n#             reachable_sum = reduce(lambda a, b: a | (reachable_sum << b), row, 0)\n#         min_diff = float(\"+inf\")\n#         idx = 0\n#         while reachable_sum:\n#             if reachable_sum & 1:\n#                 min_diff = min(min_diff, abs(target - idx))\n#             idx += 1\n#             reachable_sum >>= 1\n#         return min_diff\n    \n    \n    \n    \n#         m = len(mat)\n#         n = len(mat[0])\n#         old_hash_set = set({0})\n        \n#         for i in range(m):\n#             hash_set = set()\n#             max_val = None\n            \n#             for elem in old_hash_set:\n#                 row_sorted = sorted(mat[i])\n#                 for row_val in row_sorted:\n#                     if max_val is None and elem + row_val >= target:\n#                         max_val = elem + row_val\n#                         hash_set.add(elem+row_val)\n#                     elif max_val is not None and elem + row_val >= max_val:\n#                         # we can ignore this number, since it's difference with target \n#                         # will always be more\n#                         continue\n#                     else:\n#                         hash_set.add(elem+row_val)\n#             old_hash_set = hash_set\n            \n#         min_diff = float('inf')\n#         for elem in hash_set:\n#             if abs(elem - target) < min_diff:\n#                 min_diff = abs(elem - target)\n#         return min_diff\n\t    # m = len(mat)\n\t    # for i in range(m):\n\t    # mat[i].sort()\n\t    # q = set([0])\n\t    # for i in range(m):\n\t    # temp = set()\n\t    # for num1 in q:\n\t    # for num2 in mat[i]:\n\t    # temp.add(num1+num2)\n\t    # if(num1+num2 > target):\n\t    # break\n\t    # q = temp\n\t    # q = sorted(list(q))\n\t    # i = bisect_right(q, target)\n\t    # if(i == len(q)):\n\t    # return target - q[-1]\n\t    # if(i == 0):\n\t    # return q[0] - target\n\t    # return min(target-q[i-1], q[i]-target)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n        s=set([0])\n        ans=float('inf')\n        for i in l:\n            tem=set()\n            for j in i:\n               \n                 for k in sorted(s):\n                    tem.add(k+j)\n                    if k+j >t :break\n            s=tem\n        for o in s:ans=min(ans,abs(o-t))\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimize-the-difference-between-target-and-chosen-elements","has_notes":false,"notes":"","topic_tags":[]}