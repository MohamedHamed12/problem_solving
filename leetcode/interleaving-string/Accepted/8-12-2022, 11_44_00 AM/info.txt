{"id":771782202,"lang":"python3","lang_name":"Python3","time":"2 months, 3 weeks","timestamp":1660297440,"status":10,"status_display":"Accepted","runtime":"70 ms","url":"/submissions/detail/771782202/","is_pending":"Not Pending","title":"Interleaving String","memory":"14 MB","code":"class Solution:\n    def isInterleave(self, s1: str, s2: str, s3: str) -> bool:\n        if len(s1) + len(s2) != len(s3) :return False\n            \n        dp = [[False] * (len(s2) + 1) for i in range(len(s1) + 1)]\n        dp[len(s1)][len(s2)] = True\n        \n        for i in range(len(s1), -1, -1):\n            for j in range(len(s2), -1, -1):\n                if i < len(s1) and s1[i] == s3[i + j] and dp[i + 1][j]:\n                    dp[i][j] = True\n                if j < len(s2) and s2[j] == s3[i + j] and dp[i][j + 1]:\n                    dp[i][j] = True\n        return dp[0][0]\n    \n    \n    \n#              n,m=len(s1),len(s2)\n#              if len(s3)!=n+m:return False\n#              if len(s3)==1:\n#                     return s3==s1 or s3==s2\n#              dp=[[False]*(m+1) for i in range(n+1)]\n#              dp[0][0]=True\n#              for i in range(1,n+1):\n#                     dp[i][0]= dp[i-1][0] and s1[i-1]\n                    \n#              for j in range(1,m+1):\n#                     dp[0][j]= dp[0][j-1] and s2[j-1]\n#              for i in range(1,n+1):\n#                 for j in range(1,m+1):\n#                     dp[i][j]=(dp[i][j-1] and s2[j-1]==s3[i+j-1])or  (dp[i-1][j] and s1[i-1]==s3[i+j-1])\n                    \n#              return dp[-1][-1]\n#         cach={}            \n#         def dfs(i,h,k):\n#             if h>len(s1) or k>len(s2):return False\n#             if i==len(s3):\n#                 if h==len(s1) and k==len(s2):return True\n#                 return False\n#             if (i,h,k) in cach:return cach[(i,h,k)]\n#             if h<len(s1) and k<len(s2) and s3[i]==s1[h] ==s2[k]:\n#                 cach[(i,h,k)]= dfs(i+1,h+1,k) or dfs(i+1,h,k+1)\n                \n#             elif h<len(s1) and s3[i]==s1[h]: cach[(i,h,k)]= dfs(i+1,h+1,k)\n#             elif k<len(s2) and s3[i]==s2[k]:cach[(i,h,k)]= dfs(i+1,h,k+1)\n#             else: cach[(i,h,k)]=False\n                \n#             return cach[(i,h,k)]\n                    \n#         return dfs(0,0,0) \n                    \n        # d=defaultdict(int)     \n        # for i in s1:d[i]+=1\n        # for i in s2:d[i]+=1\n        # for i in s3:d[i]-=1\n        # if sum(d.values())!=0:return False\n        # else:return True\n#         h=0;k=0\n#         for i in s3 :\n#             if k<len(s2) and i==s2[k]:k+=1 \n#             elif h<len(s1) and i==s1[h]:h+=1\n#             else:\n#                 if h==len(s1) and k==len(s2) and h+k==len(s3):return True\n#                 return False\n#         if h==len(s1) and k==len(s2) and h+k==len(s3):return True\n\n        \n        \n        \n        \n        \n        \n        # s3=list(s3)\n        # for i in s2:\n        #     if i in s3:s3.remove(i)\n        # if s1==\"\".join(s3):return True\n        # else:return False","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interleaving-string","has_notes":false,"notes":"","topic_tags":[]}