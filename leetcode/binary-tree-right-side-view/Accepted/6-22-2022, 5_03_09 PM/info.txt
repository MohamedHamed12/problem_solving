{"id":728540625,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1655910189,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/728540625/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        if not root:\n            return []\n        l=[]\n        tot=[]\n        # tot.append([root.val])\n        l.append(root)\n        while len(l)>0:\n            tem=[]\n            temtot=[]\n            for i in l:\n                if i.left:\n                   tem.append(i.left)\n                if i.right:\n                   tem.append(i.right)\n                temtot.append(i.val)\n            l=tem\n            tot.append(temtot)\n        r=[]\n        for i in tot:\n            r.append(i[-1])\n        return r","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"notes":"","topic_tags":[]}