{"id":767192537,"lang":"python3","lang_name":"Python3","time":"3Â months","timestamp":1659842427,"status":10,"status_display":"Accepted","runtime":"2419 ms","url":"/submissions/detail/767192537/","is_pending":"Not Pending","title":"Reachable Nodes With Restrictions","memory":"78.3 MB","code":"class Solution:\n    def reachableNodes(self, n: int, edges: List[List[int]], restricted: List[int]) -> int:\n        d=defaultdict(list)\n        visit=[0 for i in range(n)]\n        for u ,v in edges:\n            d[u].append(v)\n            d[v].append(u)\n        for i in restricted:\n            visit[i]=1\n        q=[0]\n        while q:\n            root=q.pop(0)\n            visit[root]=1\n            for i in d[root]:\n                if  visit[i]==0 and  i not in q:\n                    q.append(i)\n        return sum(visit)-len(restricted)","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reachable-nodes-with-restrictions","has_notes":false,"notes":"","topic_tags":[]}