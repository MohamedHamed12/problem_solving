{"id":750801684,"lang":"python3","lang_name":"Python3","time":"3 months, 2 weeks","timestamp":1658205800,"status":10,"status_display":"Accepted","runtime":"67 ms","url":"/submissions/detail/750801684/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"16.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        l=[]\n        while head:\n            l.append(head.val)\n            head=head.next\n            \n            \n        # while l:\n        #     h=Node(i)\n        #     h.next=node(i)\n        if not l:return \n        h=root=ListNode(l[-1])\n        for i in reversed(l[:-1]):\n           h.next=ListNode(i)\n           h=h.next\n        return root\n            \n            \n        ","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"notes":"","topic_tags":[]}