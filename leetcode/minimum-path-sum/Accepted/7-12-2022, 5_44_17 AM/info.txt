{"id":744818648,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1657597457,"status":10,"status_display":"Accepted","runtime":"242 ms","url":"/submissions/detail/744818648/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"16.1 MB","code":"class Solution:\n   def minPathSum(self, grid) :\n        n=len(grid);m=len(grid[0])\n        cost=[[float('inf')]*m for i in range(n)]\n        visit=[[True]*m for i in range(n)]\n        def vaild(i,j):\n            if i in range(n) and  j in range(m):return True\n            else: return False\n        cost[0][0]=grid[0][0]\n        for i in range(n):\n            for j in range(m):\n               if vaild(i+1,j):cost[i+1][j]=min(cost[i+1][j],cost[i][j]+grid[i+1][j])\n               if vaild(i,j+1):cost[i][j+1]=min(cost[i][j+1],cost[i][j]+grid[i][j+1])\n        return cost[n-1][m-1]\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"notes":"","topic_tags":[]}