{"id":771570095,"lang":"python3","lang_name":"Python3","time":"2 months, 3 weeks","timestamp":1660275234,"status":10,"status_display":"Accepted","runtime":"660 ms","url":"/submissions/detail/771570095/","is_pending":"Not Pending","title":"Coin Change II","memory":"29.6 MB","code":"class Solution:\n    def change(self, amount: int, coins: List[int]) -> int:\n        dp=[[0]*(amount+1) for i in range(len(coins)+1)]\n        coins=sorted(coins)\n        for i in range(len(coins)+1 ):\n            for j in range(amount+1):\n                if j==0 :dp[i][j]=1\n                elif i==0:dp[i][j]=0\n                elif j<coins[i-1]:dp[i][j]=dp[i-1][j]\n                else:dp[i][j]=dp[i-1][j]+dp[i][j-coins[i-1]]\n        \n        \n        return dp[-1][-1]\n        \n        \n        \n        \n        \n        # cach={}\n        # def dfs(i,tmpsum):\n        #     if i>=len(coins):return 0\n        #     if tmpsum>amount:return 0\n        #     if tmpsum==amount:return 1\n        #     if (i,tmpsum) in cach:return cach[(i,tmpsum)]\n        #     cach[(i,tmpsum)]=dfs(i,tmpsum+coins[i])+dfs(i+1,tmpsum)\n        #     return cach[(i,tmpsum)]\n        # return dfs(0,0)","compare_result":"1111111111111111111111111111","title_slug":"coin-change-ii","has_notes":false,"notes":"","topic_tags":[]}