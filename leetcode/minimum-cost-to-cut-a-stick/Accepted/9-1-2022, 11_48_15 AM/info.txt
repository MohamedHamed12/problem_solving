{"id":788705023,"lang":"python3","lang_name":"Python3","time":"2Â months","timestamp":1662025695,"status":10,"status_display":"Accepted","runtime":"3325 ms","url":"/submissions/detail/788705023/","is_pending":"Not Pending","title":"Minimum Cost to Cut a Stick","memory":"26.5 MB","code":"class Solution:\n    def minCost(self, lenght: int, lst: List[int]) -> int:\n         \n            n = len(lst)\n            lst = sorted(lst)\n            lst.insert(0, 0)\n            lst.append(lenght)\n            cache = {}\n            @lru_cache(maxsize=8192)\n            def dfs(l, r):\n                if (l, r) in cache:\n                    return cache[(l, r)]\n                if r-l == 1:\n                    return 0\n                ans = float('inf')\n                for i in range(len(lst)):\n                    if i > l and i < r:\n                        ans = min(ans, dfs(l, i)+dfs(i, r)+lst[r]-lst[l])\n                cache[(l, r)] = ans\n                return ans\n            return dfs(0, n+1)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-cut-a-stick","has_notes":false,"notes":"","topic_tags":[]}