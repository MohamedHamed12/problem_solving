{"id":752561205,"lang":"python3","lang_name":"Python3","time":"3 months, 2 weeks","timestamp":1658375872,"status":10,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/752561205/","is_pending":"Not Pending","title":"Combination Sum","memory":"14.2 MB","code":"class Solution:\n    def combinationSum(self, l: List[int], t: int) -> List[List[int]]:\n                    tot=deque()\n                    n=len(l)\n                    def dfs(i,tmplist,total):\n                        \n                        if sum(tmplist)==t:\n                            tot.append(tmplist.copy())\n                            return\n                        if i>n-1 or total>t:\n                            return\n                        tmplist.append(l[i])\n                        dfs(i,tmplist,total+l[i])\n                        tmplist.pop()\n                        dfs(i+1,tmplist,total)\n\n                    dfs(0,[],0)\n                    return tot\n\n\n# res = []\n    \n#                 def dfs(i, cur, total):\n#                     if total == target:\n#                         res.append(cur.copy())\n#                         return\n#                     if i >= len(candidates) or total > target:\n#                         return\n\n#                     cur.append(candidates[i])\n#                     dfs(i, cur, total + candidates[i])\n#                     cur.pop()\n#                     dfs(i+1, cur, total)\n\n\n#                 dfs(0, [], 0)     \n#                 return res\n\n\n# n=len(l)\n#         tot=[]\n#         c=[combinations(l,i) for i in range(0,n+1)]\n#         for i in c:\n#             r=filter(lambda x: sum(x)==5, i)\n#             for j in r:\n#               tot.append(list(j))\n\n#         return tot\n        # for i in tot:\n        #     for j in i:\n        #       print(j)\n    # n=len(candidates)\n        # c=[combinations(candidates,i) for i in range(0,n)]\n        # tot=[]\n        # for i in c:\n        #     for j in i:\n        #      if sum(j)==target:\n        #         tot.append(j)\n        # return tot","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"notes":"","topic_tags":[]}