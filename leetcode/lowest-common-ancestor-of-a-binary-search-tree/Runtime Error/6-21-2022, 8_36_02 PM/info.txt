{"id":727827368,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1655836562,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/727827368/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n         # if p.val>q.val:\n         #        p,q=q,p\n         while True:\n            if    root.val >p.val and root.val >q.val:\n                root=root.left\n            elif    root.val <p.val and root.val <q.val:\n                root=root.left\n            else:\n                return root\n            \n        ","compare_result":"111111111111111100000000000","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"notes":"","topic_tags":[]}