{"id":745822287,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1657692389,"status":10,"status_display":"Accepted","runtime":"2136 ms","url":"/submissions/detail/745822287/","is_pending":"Not Pending","title":"Coin Change","memory":"14.3 MB","code":"class Solution:\n     def coinChange(self, coins: List[int], amount: int) -> int:\n        dp = [amount + 1] * (amount + 1)\n        dp[0] = 0\n        \n        for a in range (1, amount + 1):\n            for c in coins:\n                if (a - c) >= 0:\n                    dp[a] = min(dp[a], 1 + dp[a-c])\n        return dp[amount] if dp[amount] != amount + 1 else -1\n#     def coinChange(self, l,n) :\n#           # l=sorted(l)\n#           if n==0:return 0\n#           tot=[float('inf')]*(n+1) \n#           for i in l:\n#             for j in range(n+1):\n\n#                 if j<i:continue\n#                 elif i==j:tot[j]=1\n#                 else:tot[j]=min(tot[j],1+tot[j-i])\n#           return tot[-1] if tot[-1]!=float('inf') else -1\n#         # l=sorted(l)\n#         # tot=0\n#         # for i in l[::-1]:\n#         #     tot+=c//i\n#         #     c=c%i\n#         #     if c==0:return tot\n#         # if c==0:return tot\n#         # else:return -1\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coin-change","has_notes":false,"notes":"","topic_tags":[]}