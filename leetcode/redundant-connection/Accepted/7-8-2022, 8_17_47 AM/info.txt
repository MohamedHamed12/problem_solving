{"id":741555552,"lang":"python3","lang_name":"Python3","time":"4Â months","timestamp":1657261067,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/741555552/","is_pending":"Not Pending","title":"Redundant Connection","memory":"14.5 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def findRedundantConnection(self, edags: List[List[int]]) -> List[int]:\n\n            l=[]\n            maxnum=max([max(i) for i in edags ])\n\n            d=defaultdict(list)\n            def unoin(x,y,parent):\n                    parent[x]=y\n\n\n            def find(parent,x):\n                   if parent[x]==-1:return x\n                   elif  x==parent[x]:return x\n\n                   else: return find(parent,parent[x])\n            def check():\n                     parent=[-1]*(maxnum+1)\n                     for i ,j in edags:\n                            x=find(parent,j)\n                            y=find(parent,i)\n                            if x==y:\n                                l.append([i,j])\n                            unoin(x,y,parent)\n                     return l[-1]\n\n\n\n\n            return check()","compare_result":"111111111111111111111111111111111111111","title_slug":"redundant-connection","has_notes":false,"notes":"","topic_tags":[]}