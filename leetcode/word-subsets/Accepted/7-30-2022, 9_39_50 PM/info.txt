{"id":760892405,"lang":"python3","lang_name":"Python3","time":"3 months, 1 week","timestamp":1659209990,"status":10,"status_display":"Accepted","runtime":"838 ms","url":"/submissions/detail/760892405/","is_pending":"Not Pending","title":"Word Subsets","memory":"18.5 MB","code":"class Solution:\n    def wordSubsets(self, w1: List[str], w2: List[str]) -> List[str]:\n        tot=[]\n        d=defaultdict(int)\n        for i in  (w2):\n            c=Counter(i)\n            for j in c:\n                  if d[j] <c[j]:d[j] =c[j]\n        for i in w1:\n            c=Counter(i)\n            b=True\n            for j in d:\n                \n                  if d[j] >c[j]:\n                        b=False\n                        break\n            if b:tot.append(i)\n\n        return tot\n#         def check(w1,w2):\n#             w1=list(w1);w2=list(w2)\n#             for i in w2:\n#                try:\n#                   w1.remove(i)\n#                except:\n#                 return False\n#             return True \n#         tot=[]\n#         # w2=\"\".join(w2)\n#         for i in w1:\n#             b=True\n#             for j in w2:\n                \n#               if not check(i,j):\n#                   b=False\n#                   break\n#             if b:tot.append(i)\n#         return tot\n            \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"word-subsets","has_notes":false,"notes":"","topic_tags":[]}