{"id":728534726,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1655909660,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/728534726/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        \n        l=[]\n        tot=[]\n        # tot.append([root.val])\n        l.append(root)\n        while len(l)>0:\n            tem=[]\n            temtot=[]\n            for i in l:\n                if i.left:\n                   tem.append(i.left)\n                if i.right:\n                   tem.append(i.right)\n                temtot.append(i.val)\n            l=tem\n            tot.append(temtot)\n        return tot\n        \n\n            \n        \n        \n        ","compare_result":"1100000000000000000000000000000000","title_slug":"binary-tree-level-order-traversal","has_notes":false,"notes":"","topic_tags":[]}