{"id":794681042,"lang":"python3","lang_name":"Python3","time":"1 month, 4 weeks","timestamp":1662637244,"status":10,"status_display":"Accepted","runtime":"2315 ms","url":"/submissions/detail/794681042/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"168.7 MB","code":"class Solution:\n    def minInsertions(self, s: str) -> int:\n        n=len(s)\n        dp={}\n        def dfs(i,j):\n            if i>j:return 0\n            if i==j:return 0\n            if  (i,j) in dp:return dp[(i,j)]\n            if s[i]==s[j]:return dfs(i+1,j-1)\n            else:\n                dp[(i+1,j)]=dfs(i+1,j)\n                dfs(i,j-1)==dfs(i,j-1)\n                dp[(i,j)]=min(dp[(i+1,j)],dfs(i,j-1))+1\n                return dp[(i,j)]\n                \n            \n        return dfs(0,n-1)","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false,"notes":"","topic_tags":[]}