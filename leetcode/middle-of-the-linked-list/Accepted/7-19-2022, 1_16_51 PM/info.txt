{"id":751055611,"lang":"python3","lang_name":"Python3","time":"3 months, 2 weeks","timestamp":1658229411,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/751055611/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"13.8 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        tot=deque()\n        while head:\n            tot.append(head)\n            head=head.next\n        \n        return tot[len(tot)//2]\n        ","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"notes":"","topic_tags":[]}