{"id":791477597,"lang":"python3","lang_name":"Python3","time":"2Â months","timestamp":1662313138,"status":10,"status_display":"Accepted","runtime":"53 ms","url":"/submissions/detail/791477597/","is_pending":"Not Pending","title":"N-Queens","memory":"14.5 MB","code":"class Solution:\n    def solveNQueens(self, n: int) -> List[List[str]]:\n        col=set()\n        dneg=set()\n        dpos=set()\n        res=[]\n        board=[['.']*n for i in range(n)]\n        def bactrack(r):\n            if r==n:\n                res.append([\"\".join(i) for i in board])\n            for c in range(n):\n                if c in col or r+c in dpos or r-c in dneg :continue\n                col.add(c) ;dpos.add(r+c );dneg.add(r-c)\n                board[r][c]='Q'\n                bactrack(r+1)\n                col.remove(c) ;dpos.remove(r+c );dneg.remove(r-c)\n                board[r][c]='.'     \n        \n        bactrack(0)\n        return res","compare_result":"111111111","title_slug":"n-queens","has_notes":false,"notes":"","topic_tags":[]}