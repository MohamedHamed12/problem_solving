{"id":758315220,"lang":"python3","lang_name":"Python3","time":"3 months, 1 week","timestamp":1658944312,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/758315220/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def flatten(self, root: Optional[TreeNode]) -> None:\n        \"\"\"\n        Do not return anything, modify root in-place instead.\n        \"\"\"\n        tot=[]\n        def dfs(root):\n           \n            if not root:return \n            tot.append(root)\n            dfs(root.left)\n            \n            dfs(root.right)\n        dfs(root)\n        \n        for i in range(len(tot)-1):\n            tot[i].left=None\n            tot[i].right=tot[i+1]\n        root=tot[0]\n        \n                ","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"notes":"","topic_tags":[]}